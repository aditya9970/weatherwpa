{"version":3,"sources":["components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["MainComponent","props","weather","main","location","country","icon","iconStyle","width","height","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","className","style","description","temp","display","justifyContent","marginTop","temp_min","temp_max","feels_like","ExtraComponent","data","fontSize","pressure","humidity","wind","speed","d2d","deg","rain","snow","clouds","all","UVComponent","useState","color","setColor","inten","setInten","legnth","setLength","value","useEffect","rgb","UV_level","UV_intensity","handleBar","background","App","input","setInput","setData","data_UV","setUV","isloading","setisloading","key","link","fetchData","a","axios","link_UV","coord","lat","lon","console","log","fetchUV","placeholder","type","onChange","event","target","onClick","preventDefault","name","sys","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0dab677f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport d2d from \"degrees-to-direction\";\r\n\r\nfunction MainComponent(props) {\r\n  const { weather, main, location, country, icon } = props;\r\n\r\n  var iconStyle = {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    backgroundImage: `url(http://openweathermap.org/img/wn/${icon}@2x.png)`,\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"main__container\">\r\n      <div className=\"Location__container\">\r\n        <h2>{location}</h2>\r\n        <h3>{country}</h3>\r\n      </div>\r\n      <div className=\"weather__container\">\r\n        <div className=\"weather__icon\" style={iconStyle}></div>\r\n        <h3>\r\n          {weather.description} {main.temp}째C\r\n        </h3>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <p>Low {main.temp_min}째C</p>\r\n          <p>High {main.temp_max}째C</p>\r\n        </div>\r\n        <p>Feels {main.feels_like}째C</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MainComponent;\r\n\r\nexport function ExtraComponent(props) {\r\n  const { data } = props;\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Extras</h2>\r\n      <ul className=\"extras__grid_body\">\r\n        <li className=\"list__item\">\r\n          <p style={{ fontSize: \"16px\" }}>{data.main.pressure}</p>\r\n          <p className=\"overflow_stop\">Pressure</p>\r\n        </li>\r\n        <li className=\"list__item\">\r\n          <p style={{ fontSize: \"16px\" }}>{data.main.humidity}%</p>\r\n          <p className=\"overflow_stop\">Humidity</p>\r\n        </li>\r\n        {data.wind && (\r\n          <li className=\"list__item\">\r\n            <p style={{ fontSize: \"16px\" }}>{data.wind.speed}m/s</p>\r\n            <p style={{ fontSize: \"8px\" }}>{d2d(data.wind.deg)}</p>\r\n            <p className=\"overflow_stop\">Wind speed</p>\r\n          </li>\r\n        )}\r\n        {data.rain && (\r\n          <li className=\"list__item\">\r\n            <p style={{ fontSize: \"16px\" }}>N/A</p>\r\n            <p className=\"overflow_stop\">Rain</p>\r\n          </li>\r\n        )}\r\n        {data.snow && (\r\n          <li className=\"list__item\">\r\n            <p style={{ fontSize: \"16px\" }}>N/A</p>\r\n            <p className=\"overflow_stop\">snow</p>\r\n          </li>\r\n        )}\r\n        {data.clouds && (\r\n          <li className=\"list__item\">\r\n            <p style={{ fontSize: \"16px\" }}>{data.clouds.all}%</p>\r\n            <p className=\"overflow_stop\">Cloudiness</p>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function UVComponent(props) {\r\n  const [color, setColor] = useState(\"\");\r\n  const [inten, setInten] = useState(\"N/A\");\r\n  const [legnth, setLength] = useState(0);\r\n  const { value } = props;\r\n\r\n  function handleBar() {\r\n    var rgb = \"0,0,0,1\";\r\n    var UV_level = value;\r\n    var UV_intensity = \"N/A\";\r\n    if (UV_level <= 2) {\r\n      rgb = \"0,255,0,1\";\r\n      UV_intensity = \"low\";\r\n    } else if (UV_level <= 5) {\r\n      rgb = \"255, 191, 0,1\";\r\n      UV_intensity = \"Moderate\";\r\n    } else if (UV_level <= 7) {\r\n      rgb = \"255, 128, 0 , 1\";\r\n      UV_intensity = \"High\";\r\n    } else {\r\n      rgb = \"255, 0, 0 , 1\";\r\n      UV_intensity = \"Very High\";\r\n    }\r\n    setInten(UV_intensity);\r\n    setColor(rgb);\r\n    const width = (UV_level / 11) * 100;\r\n    setLength(width + \"%\");\r\n  }\r\n  useEffect(() => {\r\n    handleBar();\r\n  });\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>UV light</h2>\r\n      <div style={{ display: \"flex\" }}>\r\n        <h3>{value}</h3>\r\n        <p>{inten}</p>\r\n      </div>\r\n      <div className=\"graph_container\">\r\n        <div className=\"bar__body\">\r\n          <div\r\n            className=\"bar__level\"\r\n            style={{\r\n              background: `linear-gradient(to right , rgba(0,255,0,1), rgba(${color}))`,\r\n              width: `${legnth}`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <ul className=\"units__list\">\r\n          <li className=\"unit\">0</li>\r\n          <li className=\"unit\">1</li>\r\n          <li className=\"unit\">2</li>\r\n          <li className=\"unit\">3</li>\r\n          <li className=\"unit\">4</li>\r\n          <li className=\"unit\">5</li>\r\n          <li className=\"unit\">6</li>\r\n          <li className=\"unit\">7</li>\r\n          <li className=\"unit\">8</li>\r\n          <li className=\"unit\">9</li>\r\n          <li className=\"unit\">10</li>\r\n          <li className=\"unit\">11+</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport MainComponent, {\n  ExtraComponent,\n  UVComponent,\n} from \"./components/MainComponent\";\n\nfunction App() {\n  var [input, setInput] = useState(\"\");\n  var [data, setData] = useState({});\n  var [data_UV, setUV] = useState({});\n  var [isloading, setisloading] = useState(false);\n  const key = \"c5b7f9f39502aacadd0e8a1c31eee936#\";\n  var link = `http://api.openweathermap.org/data/2.5/weather?q=${input}&units=metric&appid=${key}`;\n  const fetchData = async () => {\n    var { data } = await axios(link);\n    setData(data);\n    var link_UV = `http://api.openweathermap.org/data/2.5/uvi?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${key}`;\n    console.log(link_UV);\n    fetchUV(link_UV);\n  };\n  const fetchUV = async (link) => {\n    var { data } = await axios(link);\n    setUV(data);\n    setisloading(false);\n  };\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setisloading(true);\n    fetchData();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"search__container\">\n        <input\n          className=\"search__input\"\n          placeholder=\"Search\"\n          type=\"text\"\n          value={input}\n          onChange={handleChange}\n        />\n        <button className=\"btn__search\" onClick={handleSubmit}>\n          <i className=\"fa fa-search btn__icon\"></i>\n        </button>\n      </div>\n      {data.name && data_UV.value ? (\n        <>\n          <MainComponent\n            weather={data.weather[0]}\n            main={data.main}\n            location={data.name}\n            country={data.sys.country}\n            icon={data.weather[0].icon}\n          />\n          <ExtraComponent data={data} />\n          <UVComponent value={data_UV.value} />\n        </>\n      ) : (\n        <div className=\"instruction\">Enter Your location</div>\n      )}\n      {isloading && (\n        <div className=\"loader__body\">\n          <div className=\"loader\">Loading</div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}